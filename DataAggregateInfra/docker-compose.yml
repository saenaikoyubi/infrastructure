version: '3.8'

services:
  web:
    container_name: web
    hostname: web
    build:
      context: ./web
      dockerfile: Dockerfile
    volumes: 
      - type: bind
        source: web/volume
        target: /web
    ports:
      - "80:80"
    depends_on:
      - app1
      - app2
    networks:
      local_nw:
        ipv4_address: 192.168.1.2

  app1:
    container_name: app1
    hostname: app1
    build:
      context: ./app1
      dockerfile: Dockerfile
    restart: always
    volumes: 
      - type: bind
        source: app1/volume
        target: /app1
    depends_on:
      - db
    networks:
      local_nw:
        ipv4_address: 192.168.1.3

  app2:
    container_name: app2
    hostname: app2
    build:
      context: ./app2
      dockerfile: Dockerfile
    restart: always
    volumes: 
      - type: bind
        source: app2/volume
        target: /app2
    depends_on:
      - db
    networks:
      local_nw:
        ipv4_address: 192.168.1.4

  db:
    container_name: db
    hostname: db
    build:
      context: ./db
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes: 
      - type: bind
        source: ./db-data
        target: /var/lib/postgresql/data
    networks:
      local_nw:
        ipv4_address: 192.168.1.5

  adminer:
    container_name: adminer
    hostname: adminer
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - 8080:8080
    networks:
      local_nw:
        ipv4_address: 192.168.1.6

networks: 
  local_nw:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
    